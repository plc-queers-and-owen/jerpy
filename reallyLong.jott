#this is a really large example
#it will test many of the features
#it does not test them all

Def earlyReturn[]: String {
    ::concat["a", "b"];
    ::concat["x", "y"];
    Return ::concat["g", "x"];
}

Def testEarlyReturn[]: Void {
    String val;
    val = ::earlyReturn[];
    ::print[::concat["gx == ", val]];
}

Def testPrintLoop[ x:Integer ]:Void{
    While[x>0]{
	    ::print[x];
		x = x - 1;
	}
}

Def testConcatLoop[ y:String ]:String{
	Integer x;
	String output;

    x = ::length[y] - 1;
    output = y;
	While[x>0]{
	    output = ::concat[output, y];
		x = x - 1;
	}
	Return output;
}

Def testIf[ d:Double, x:Integer ]:Void{
    If[d>5.1]{
	    ::print["Hi"];
	}
	Elseif[d>0.1]{
	    ::print[x];
	}
	Else{
	    ::print[3.2 * 4.0];
	}
}

Def testIfLoop[ x:Integer ]:Integer{
    Integer output;
	Boolean switch;

    output = 1;
    switch = True;
	While[x>0]{
	    If[switch]{
		    output = output * 2;
			switch = False;
		}
		Else{
		    switch = True;
		}
		x = x - 1;
	}
	Return output;
}

Def foo[]:Void{
    ::print["ran foo"];
}

Def testFuncCallLoop[ x:Integer ]:Void{
    While[x>0]{
	    ::foo[];
		x = x - 2;
	}
}

Def main[]:Void{
    String str;
    Integer intI;
	::testPrintLoop[5];
	str = "a1";
	::print[::testConcatLoop[ str ]];
	::testIf[1.1, 3];
	intI = ::testIfLoop[3];
	::print[intI];
	::testFuncCallLoop[5];
	::testEarlyReturn[];
}